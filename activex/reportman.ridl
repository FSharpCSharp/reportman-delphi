// ************************************************************************ //
// WARNING
// -------
// This file is generated by the Type Library importer or Type Libary Editor.
// Barring syntax errors, the Editor will parse modifications made to the file.
// However, when applying changes via the Editor this file will be regenerated
// and comments or formatting changes will be lost.
// ************************************************************************ //
// File generated on 20/04/2017 15:28:46 (- $Rev: 12980 $, 1113541062).

[
  uuid(D4D26F6B-6564-44F4-A913-03C91CE37740),
  version(2.1),
  helpstring("Report Manager ActiveX Library"),
  control

]
library reportman
{

  importlib("stdole2.tlb");

  interface IReportManX;
  dispinterface IReportManXEvents;
  coclass ReportManX;
  interface IReportReport;
  coclass ReportReport;
  interface IReportParameters;
  coclass ReportParameters;
  interface IReportParam;
  coclass ReportParam;
  interface IReportmanXAServer;
  coclass ReportmanXAServer;
  interface IPreviewControl;
  dispinterface IPreviewControlEvents;
  coclass PreviewControl;


  [
    uuid(4568406A-3FEB-416F-B251-46B14BE96F96),
    version(2.1),
    helpstring("Help type enumeration")
  ]
  enum TxHelpType
  {
    [helpstring("htKeyword")]
    htKeyword = 0,
    [helpstring("htContext")]
    htContext = 1
  };

  [
    uuid(E66ACB05-83C3-46E7-82A3-4F513A56BC8C),
    version(2.1),
    helpstring("Paramtype enumeration")
  ]
  enum TxParamType
  {
    rpParamString = 0,
    rpParamInteger = 1,
    rpParamDouble = 2,
    rpParamDate = 3,
    rpParamTime = 4,
    rpParamDateTime = 5,
    rpParamCurrency = 6,
    rpParamBool = 7,
    rpParamExpreB = 8,
    rpParamExpreA = 9,
    rpParamSubst = 10,
    rpParamList = 11,
    rpParamUnknown = 12
  };

  [
    uuid(5E70D823-A7FB-4D17-8BAC-4D2783DF969F),
    version(1.0)
  ]
  enum TxAutoScaleType
  {
    [helpstring("AScaleReal")]
    AScaleReal = 0,
    [helpstring("AScaleWide")]
    AScaleWide = 1,
    [helpstring("AScaleHeight")]
    AScaleHeight = 2,
    [helpstring("AScaleEntirePage")]
    AScaleEntirePage = 3,
    [helpstring("AScaleCustom")]
    AScaleCustom = 4
  };

  [
    uuid(5C323F66-BE06-4940-B559-348D4E162C94),
    version(1.0)
  ]
  enum TxBorderStyle
  {
    [helpstring("bsNone")]
    bsNone = 0,
    [helpstring("bsSingle")]
    bsSingle = 1
  };

  [
    uuid(4C51725D-83CB-4118-8943-8599218574A8),
    version(1.0)
  ]
  enum TxDragMode
  {
    [helpstring("dmManual")]
    dmManual = 0,
    [helpstring("dmAutomatic")]
    dmAutomatic = 1
  };

  [
    uuid(DF1D4B91-B784-42E5-8CEE-C8361F0CE2E7),
    version(1.0)
  ]
  enum TxMouseButton
  {
    [helpstring("mbLeft")]
    mbLeft = 0,
    [helpstring("mbRight")]
    mbRight = 1,
    [helpstring("mbMiddle")]
    mbMiddle = 2
  };

  [
    uuid(BC722140-130F-4F6A-942F-08C751BC3219),
    version(1.0)
  ]
  enum TxActiveFormBorderStyle
  {
    [helpstring("afbNone")]
    afbNone = 0,
    [helpstring("afbSingle")]
    afbSingle = 1,
    [helpstring("afbSunken")]
    afbSunken = 2,
    [helpstring("afbRaised")]
    afbRaised = 3
  };

  [
    uuid(DDAB1E52-F7DE-489C-9DEA-0A30C5504CDD),
    version(1.0)
  ]
  enum TxPrintScale
  {
    [helpstring("poNone")]
    poNone = 0,
    [helpstring("poProportional")]
    poProportional = 1,
    [helpstring("poPrintToFit")]
    poPrintToFit = 2
  };

  [
    custom(8B342977-45CB-4A01-A8F2-E47B61F3539E, 0)
  ]
  typedef IFontDisp** PPUserType1;

  [
    uuid(B3AE1470-158D-4855-83DB-BC3A2746C26E),
    version(2.1),
    helpstring("Dispatch interface for ReportManX Control"),
    dual,
    oleautomation
  ]
  interface IReportManX: IDispatch
  {
    [id(0x00000001)]
    HRESULT _stdcall SetDatasetSQL([in] BSTR datasetname, [in] BSTR sqlsentence);
    [id(0x00000002)]
    HRESULT _stdcall SetDatabaseConnectionString([in] BSTR databasename, [in] BSTR connectionstring);
    [id(0x00000003)]
    HRESULT _stdcall GetDatasetSQL([in] BSTR datasetname, [out, retval] BSTR* Value);
    [id(0x00000004)]
    HRESULT _stdcall GetDatabaseConnectionString([in] BSTR databasename, [out, retval] BSTR* Value);
    [id(0x00000005)]
    HRESULT _stdcall SetParamValue([in] BSTR paramname, [in] VARIANT paramvalue);
    [id(0x00000006)]
    HRESULT _stdcall GetParamValue([in] BSTR paramname, [out, retval] VARIANT* Value);
    [id(0x00000007)]
    HRESULT _stdcall Execute([out, retval] VARIANT_BOOL* Value);
    [id(0x00000008)]
    HRESULT _stdcall PrinterSetup(void);
    [id(0x00000009)]
    HRESULT _stdcall ShowParams([out, retval] VARIANT_BOOL* Value);
    [id(0x0000000A)]
    HRESULT _stdcall SaveToPDF([in] BSTR filename, [in] VARIANT_BOOL compressed);
    [id(0x0000000B)]
    HRESULT _stdcall PrintRange([in] long frompage, [in] long topage, [in] long copies, [in] VARIANT_BOOL collate, [out, retval] VARIANT_BOOL* Value);
    [propget, id(0x0000000C)]
    HRESULT _stdcall filename([out, retval] BSTR* Value);
    [propput, id(0x0000000C)]
    HRESULT _stdcall filename([in] BSTR Value);
    [propget, id(0x0000000D)]
    HRESULT _stdcall Preview([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x0000000D)]
    HRESULT _stdcall Preview([in] VARIANT_BOOL Value);
    [propget, id(0x0000000E)]
    HRESULT _stdcall ShowProgress([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x0000000E)]
    HRESULT _stdcall ShowProgress([in] VARIANT_BOOL Value);
    [propget, id(0x0000000F)]
    HRESULT _stdcall ShowPrintDialog([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x0000000F)]
    HRESULT _stdcall ShowPrintDialog([in] VARIANT_BOOL Value);
    [propget, id(0x00000010)]
    HRESULT _stdcall Title([out, retval] BSTR* Value);
    [propput, id(0x00000010)]
    HRESULT _stdcall Title([in] BSTR Value);
    [propget, id(0x00000011)]
    HRESULT _stdcall Language([out, retval] long* Value);
    [propput, id(0x00000011)]
    HRESULT _stdcall Language([in] long Value);
    [propget, id(0x00000012), hidden]
    HRESULT _stdcall DoubleBuffered([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x00000012), hidden]
    HRESULT _stdcall DoubleBuffered([in] VARIANT_BOOL Value);
    [propget, id(0x00000013), hidden]
    HRESULT _stdcall AlignDisabled([out, retval] VARIANT_BOOL* Value);
    [propget, id(0x00000014), hidden]
    HRESULT _stdcall VisibleDockClientCount([out, retval] long* Value);
    [id(0x00000016)]
    HRESULT _stdcall DrawTextBiDiModeFlagsReadingOnly([out, retval] long* Value);
    [propget, id(0xFFFFFDFE), hidden]
    HRESULT _stdcall Enabled([out, retval] VARIANT_BOOL* Value);
    [propput, id(0xFFFFFDFE), hidden]
    HRESULT _stdcall Enabled([in] VARIANT_BOOL Value);
    [id(0x00000017)]
    HRESULT _stdcall InitiateAction(void);
    [id(0x00000018)]
    HRESULT _stdcall IsRightToLeft([out, retval] VARIANT_BOOL* Value);
    [id(0x0000001B)]
    HRESULT _stdcall UseRightToLeftReading([out, retval] VARIANT_BOOL* Value);
    [id(0x0000001C)]
    HRESULT _stdcall UseRightToLeftScrollBar([out, retval] VARIANT_BOOL* Value);
    [propget, id(0x0000001D), hidden]
    HRESULT _stdcall Visible([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x0000001D), hidden]
    HRESULT _stdcall Visible([in] VARIANT_BOOL Value);
    [propget, id(0x0000001E)]
    HRESULT _stdcall Cursor([out, retval] short* Value);
    [propput, id(0x0000001E)]
    HRESULT _stdcall Cursor([in] short Value);
    [propget, id(0x0000001F)]
    HRESULT _stdcall HelpType([out, retval] enum TxHelpType* Value);
    [propput, id(0x0000001F)]
    HRESULT _stdcall HelpType([in] enum TxHelpType Value);
    [propget, id(0x00000020)]
    HRESULT _stdcall HelpKeyword([out, retval] BSTR* Value);
    [propput, id(0x00000020)]
    HRESULT _stdcall HelpKeyword([in] BSTR Value);
    [id(0x00000022)]
    HRESULT _stdcall SetSubComponent([in] VARIANT_BOOL IsSubComponent);
    [id(0xFFFFFDD8)]
    HRESULT _stdcall AboutBox(void);
    [id(0x000000C9)]
    HRESULT _stdcall ExecuteRemote([in] BSTR hostname, [in] long port, [in] BSTR user, [in] BSTR password, [in] BSTR aliasname, [in] BSTR reportname);
    [id(0x000000CA)]
    HRESULT _stdcall CalcReport([in] VARIANT_BOOL ShowProgress);
    [id(0x000000CB)]
    HRESULT _stdcall Compose([in] ReportReport* Report, [in] VARIANT_BOOL Execute);
    [id(0x000000CC)]
    HRESULT _stdcall SaveToText([in] BSTR filename, [in] BSTR textdriver);
    [propget, id(0x00000015)]
    HRESULT _stdcall Report([out, retval] ReportReport** Value);
    [id(0x00000019)]
    HRESULT _stdcall SaveToExcel([in] BSTR filename);
    [id(0x0000001A)]
    HRESULT _stdcall SaveToHTML([in] BSTR filename);
    [id(0x00000021)]
    HRESULT _stdcall SetRecordSet([in] BSTR datasetname, [in]  IDispatch* Value);
    [id(0x00000023)]
    HRESULT _stdcall SaveToCustomText([in] BSTR filename);
    [id(0x00000024)]
    HRESULT _stdcall SaveToCSV([in] BSTR filename);
    [id(0x00000025)]
    HRESULT _stdcall SaveToSVG([in] BSTR filename);
    [id(0x00000026)]
    HRESULT _stdcall SaveToMetafile([in] BSTR filename);
    [id(0x00000027)]
    HRESULT _stdcall SaveToExcel2([in] BSTR filename);
    [propget, id(0x0000002A)]
    HRESULT _stdcall DefaultPrinter([out, retval] BSTR* Value);
    [propput, id(0x0000002A)]
    HRESULT _stdcall DefaultPrinter([in] BSTR Value);
    [propget, id(0x0000002C)]
    HRESULT _stdcall PrintersAvailable([out, retval] BSTR* Value);
    [id(0x00000028)]
    HRESULT _stdcall GetRemoteParams([in] BSTR hostname, [in] long port, [in] BSTR user, [in] BSTR password, [in] BSTR aliasname, [in] BSTR reportname);
    [id(0x00000029)]
    HRESULT _stdcall SaveToCSV2([in] BSTR filename, [in] BSTR separator);
    [propget, id(0x0000002B)]
    HRESULT _stdcall AsyncExecution([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x0000002B)]
    HRESULT _stdcall AsyncExecution([in] VARIANT_BOOL Value);
    [id(0x000000CD)]
    HRESULT _stdcall SaveToHTMLSingle([in] BSTR filename);
    [id(0x000000CE)]
    HRESULT _stdcall SaveToFile([in] BSTR filename);
  };

  [
    uuid(2FCB34BE-8DD4-4567-A771-9965C2FD3A04),
    version(2.1),
    helpstring("Dispatch interface for ReportReport Object"),
    dual,
    oleautomation
  ]
  interface IReportReport: IDispatch
  {
    [propget, id(0x00000001)]
    HRESULT _stdcall Params([out, retval] ReportParameters** Value);
    [propget, id(0x00000003), hidden]
    HRESULT _stdcall VCLReport([out, retval] LPSTR* Value);
    [id(0x00000002)]
    HRESULT _stdcall AddColumn([in] long Width, [in] BSTR Expression, [in] BSTR ExpFormat, [in] BSTR Caption, [in] BSTR CaptionFormat, [in] BSTR SumaryExpression, [in] BSTR SumaryFormat);
    [propget, id(0x00000004)]
    HRESULT _stdcall AutoResizeColumns([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x00000004)]
    HRESULT _stdcall AutoResizeColumns([in] VARIANT_BOOL Value);
    [id(0x000000C9)]
    HRESULT _stdcall SaveToFile([in] BSTR filename);
  };

  [
    uuid(A5F6E90E-DFE7-49DA-AA38-C1A41C995B6B),
    version(2.1),
    helpstring("Dispatch interface for ReportParameters Object"),
    dual,
    oleautomation
  ]
  interface IReportParameters: IDispatch
  {
    [propget, id(0x00000001)]
    HRESULT _stdcall Count([out, retval] long* Value);
    [propget, id(0x00000002)]
    HRESULT _stdcall Items([in] long Index, [out, retval] ReportParam** Value);
    [id(0x00000003)]
    HRESULT _stdcall ParamExists([in] BSTR paramname, [out, retval] VARIANT_BOOL* Value);
  };

  [
    uuid(F1634F9E-DE5A-411E-9A9E-3A46707A7ABB),
    version(2.1),
    helpstring("Dispatch interface for ReportParam Object"),
    dual,
    oleautomation
  ]
  interface IReportParam: IDispatch
  {
    [propget, id(0x00000001), helpstring("Parameter name")]
    HRESULT _stdcall Name([out, retval] BSTR* Value);
    [propput, id(0x00000001), helpstring("Parameter name")]
    HRESULT _stdcall Name([in] BSTR Value);
    [propget, id(0x00000002), helpstring("Parameter description")]
    HRESULT _stdcall Description([out, retval] BSTR* Value);
    [propput, id(0x00000002), helpstring("Parameter description")]
    HRESULT _stdcall Description([in] BSTR Value);
    [propget, id(0x00000003), helpstring("Visible to the end user")]
    HRESULT _stdcall Visible([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x00000003), helpstring("Visible to the end user")]
    HRESULT _stdcall Visible([in] VARIANT_BOOL Value);
    [propget, id(0x00000004), helpstring("Parameter type")]
    HRESULT _stdcall ParamType([out, retval] enum TxParamType* Value);
    [propput, id(0x00000004), helpstring("Parameter type")]
    HRESULT _stdcall ParamType([in] enum TxParamType Value);
    [propget, id(0x00000005), helpstring("Parameter value")]
    HRESULT _stdcall Value([out, retval] VARIANT* Value);
    [propput, id(0x00000005), helpstring("Parameter value")]
    HRESULT _stdcall Value([in] VARIANT Value);
  };

  [
    uuid(F3A6B88C-D629-402E-BC62-BAB0E2EE39AF),
    version(2.1),
    helpstring("Dispatch interface for ReportmanXAServer Object"),
    dual,
    oleautomation
  ]
  interface IReportmanXAServer: IDispatch
  {
    [id(0x00000001)]
    HRESULT _stdcall GetPDF([in] IReportReport* Report, [in] VARIANT_BOOL compressed);
    [id(0x00000002)]
    HRESULT _stdcall GetCustomText([in] IReportReport* Report);
    [id(0x00000003)]
    HRESULT _stdcall GetText([in] IReportReport* Report);
    [id(0x00000004)]
    HRESULT _stdcall GetCSV([in] IReportReport* Report);
    [id(0x00000005)]
    HRESULT _stdcall GetMetafile([in] IReportReport* Report);
    [id(0x00000006)]
    HRESULT _stdcall GetCSV2([in] IReportReport* Report, [in] BSTR separator);
  };

  [
    uuid(3D8043B8-E2F6-4F5D-B055-571924F5B0DC),
    version(1.0),
    helpstring("Dispatch interface for PreviewControl Control"),
    dual,
    oleautomation
  ]
  interface IPreviewControl: IDispatch
  {
    [propget, id(0x00000001), hidden]
    HRESULT _stdcall Visible([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x00000001), hidden]
    HRESULT _stdcall Visible([in] VARIANT_BOOL Value);
    [propget, id(0x00000002)]
    HRESULT _stdcall AutoScroll([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x00000002)]
    HRESULT _stdcall AutoScroll([in] VARIANT_BOOL Value);
    [propget, id(0x00000003)]
    HRESULT _stdcall AutoSize([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x00000003)]
    HRESULT _stdcall AutoSize([in] VARIANT_BOOL Value);
    [propget, id(0x00000004)]
    HRESULT _stdcall AxBorderStyle([out, retval] enum TxActiveFormBorderStyle* Value);
    [propput, id(0x00000004)]
    HRESULT _stdcall AxBorderStyle([in] enum TxActiveFormBorderStyle Value);
    [propget, id(0xFFFFFDFA)]
    HRESULT _stdcall Caption([out, retval] BSTR* Value);
    [propput, id(0xFFFFFDFA)]
    HRESULT _stdcall Caption([in] BSTR Value);
    [propget, id(0xFFFFFE0B)]
    HRESULT _stdcall Color([out, retval] OLE_COLOR* Value);
    [propput, id(0xFFFFFE0B)]
    HRESULT _stdcall Color([in] OLE_COLOR Value);
    [propget, id(0xFFFFFE00)]
    HRESULT _stdcall Font([out, retval] IFontDisp** Value);
    [propput, id(0xFFFFFE00)]
    HRESULT _stdcall Font([in] IFontDisp* Value);
    [propputref, id(0xFFFFFE00)]
    HRESULT _stdcall Font([in] IFontDisp** Value);
    [propget, id(0x00000005)]
    HRESULT _stdcall KeyPreview([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x00000005)]
    HRESULT _stdcall KeyPreview([in] VARIANT_BOOL Value);
    [propget, id(0x00000006)]
    HRESULT _stdcall PixelsPerInch([out, retval] long* Value);
    [propput, id(0x00000006)]
    HRESULT _stdcall PixelsPerInch([in] long Value);
    [propget, id(0x00000007)]
    HRESULT _stdcall PrintScale([out, retval] enum TxPrintScale* Value);
    [propput, id(0x00000007)]
    HRESULT _stdcall PrintScale([in] enum TxPrintScale Value);
    [propget, id(0x00000008)]
    HRESULT _stdcall Scaled([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x00000008)]
    HRESULT _stdcall Scaled([in] VARIANT_BOOL Value);
    [propget, id(0x00000009), hidden]
    HRESULT _stdcall Active([out, retval] VARIANT_BOOL* Value);
    [propget, id(0x0000000A), hidden]
    HRESULT _stdcall DropTarget([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x0000000A), hidden]
    HRESULT _stdcall DropTarget([in] VARIANT_BOOL Value);
    [propget, id(0x0000000B), hidden]
    HRESULT _stdcall HelpFile([out, retval] BSTR* Value);
    [propput, id(0x0000000B), hidden]
    HRESULT _stdcall HelpFile([in] BSTR Value);
    [propget, id(0x0000000C), hidden]
    HRESULT _stdcall DoubleBuffered([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x0000000C), hidden]
    HRESULT _stdcall DoubleBuffered([in] VARIANT_BOOL Value);
    [propget, id(0x0000000D), hidden]
    HRESULT _stdcall VisibleDockClientCount([out, retval] long* Value);
    [propget, id(0xFFFFFDFE), hidden]
    HRESULT _stdcall Enabled([out, retval] VARIANT_BOOL* Value);
    [propput, id(0xFFFFFDFE), hidden]
    HRESULT _stdcall Enabled([in] VARIANT_BOOL Value);
    [propget, id(0x0000000E)]
    HRESULT _stdcall Cursor([out, retval] short* Value);
    [propput, id(0x0000000E)]
    HRESULT _stdcall Cursor([in] short Value);
    [id(0x00000010)]
    HRESULT _stdcall SetReport([in] IReportReport* Report);
    [propget, id(0x0000000F)]
    HRESULT _stdcall AutoScale([out, retval] enum TxAutoScaleType* Value);
    [propput, id(0x0000000F)]
    HRESULT _stdcall AutoScale([in] enum TxAutoScaleType Value);
    [propget, id(0x00000011)]
    HRESULT _stdcall PreviewScale([out, retval] double* Value);
    [propput, id(0x00000011)]
    HRESULT _stdcall PreviewScale([in] double Value);
    [propget, id(0x00000012)]
    HRESULT _stdcall EntirePageCount([out, retval] long* Value);
    [propput, id(0x00000012)]
    HRESULT _stdcall EntirePageCount([in] long Value);
    [propget, id(0x00000013)]
    HRESULT _stdcall EntireTopDown([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x00000013)]
    HRESULT _stdcall EntireTopDown([in] VARIANT_BOOL Value);
    [id(0x00000014)]
    HRESULT _stdcall FirstPage(void);
    [id(0x00000015)]
    HRESULT _stdcall PriorPage(void);
    [id(0x00000016)]
    HRESULT _stdcall NextPage(void);
    [id(0x00000017)]
    HRESULT _stdcall LastPage(void);
    [id(0x00000018)]
    HRESULT _stdcall RefreshMetafile(void);
    [propget, id(0x00000019)]
    HRESULT _stdcall Page([out, retval] long* Value);
    [propput, id(0x00000019)]
    HRESULT _stdcall Page([in] long Value);
    [id(0x0000001A)]
    HRESULT _stdcall DoScroll([in] VARIANT_BOOL vertical, [in] long increment);
    [propget, id(0x0000001B)]
    HRESULT _stdcall Finished([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x0000001B)]
    HRESULT _stdcall Finished([in] VARIANT_BOOL Value);
    [id(0x0000001C)]
    HRESULT _stdcall SaveToFile([in] BSTR filename, [in] long format, [in] BSTR textdriver, [in] long horzres, [in] long vertres, [in] VARIANT_BOOL mono);
    [id(0x0000001D)]
    HRESULT _stdcall Clear(void);
  };

  [
    uuid(50909EA4-8F4F-4865-877D-287FC7072177),
    version(2.1),
    helpstring("Events interface for ReportManX Control")
  ]
  dispinterface IReportManXEvents
  {
    properties:
    methods:
  };

  [
    uuid(7364E2EA-8EEC-4673-9059-3B078C388717),
    version(1.0),
    helpstring("Events interface for PreviewControl Control")
  ]
  dispinterface IPreviewControlEvents
  {
    properties:
    methods:
    [id(0x00000001)]
    void OnActivate(void);
    [id(0x00000002)]
    void OnClick(void);
    [id(0x00000003)]
    void OnCreate(void);
    [id(0x00000005)]
    void OnDblClick(void);
    [id(0x00000006)]
    void OnDestroy(void);
    [id(0x00000007)]
    void OnDeactivate(void);
    [id(0x0000000B)]
    void OnKeyPress([in, out] short* Key);
    [id(0x00000010)]
    void OnPaint(void);
    [id(0x00000004)]
    void OnWorkProgress([in] long records, [in] long pagecount, [in, out] VARIANT_BOOL* docancel);
    [id(0x00000008)]
    void OnPageDrawn([in] long PageDrawn, [in] long PagesDrawn);
  };

  [
    uuid(DC30E149-4129-450F-BDFE-BD9E6F31147E),
    version(2.1),
    helpstring("ReportManX Control"),
    control
  ]
  coclass ReportManX
  {
    [default] interface IReportManX;
    [default, source] dispinterface IReportManXEvents;
  };

  [
    uuid(E30FD4FC-F47A-4932-A3E6-6694550588F3),
    version(2.1),
    helpstring("ReportReport Object")
  ]
  coclass ReportReport
  {
    [default] interface IReportReport;
  };

  [
    uuid(F79CF82C-C2AD-46CC-ABEA-084016CFE58A),
    version(2.1),
    helpstring("ReportParameters Object")
  ]
  coclass ReportParameters
  {
    [default] interface IReportParameters;
  };

  [
    uuid(E96B253E-143E-40E8-BFDA-366C5F112DAE),
    version(2.1),
    helpstring("ReportParam Object")
  ]
  coclass ReportParam
  {
    [default] interface IReportParam;
  };

  [
    uuid(FD3BE5E5-CBE4-4C29-A733-8CB842999075),
    version(2.1),
    helpstring("ReportmanXAServer Object")
  ]
  coclass ReportmanXAServer
  {
    [default] interface IReportmanXAServer;
  };

  [
    uuid(45978803-4B15-4E0E-98CE-AED9B1E1B701),
    version(1.0),
    helpstring("PreviewControl Control"),
    control
  ]
  coclass PreviewControl
  {
    [default] interface IPreviewControl;
    [default, source] dispinterface IPreviewControlEvents;
  };

};
