// ************************************************************************ //
// WARNING                                                                    
// -------                                                                    
// This file is generated by the Type Library importer or Type Libary Editor. 
// Barring syntax errors, the Editor will parse modifications made to the file. 
// However, when applying changes via the Editor this file will be regenerated  
// and comments or formatting changes will be lost.                             
// ************************************************************************ //
// File generated on 09/01/2010 14:52:37 (- $Rev: 12980 $, 9616244).
// "c:\Program Files (x86)\Embarcadero\RAD Studio\7.0\bin\tlibimp.exe"  -I WebReportmanX.tlb

[
  uuid(3C25C257-3AA3-4215-9128-3DCD59849E05), 
  version(1.0), 
  helpstring("WebReportManX Library"), 
  control
    
]
library WebReportManX
{

  importlib("stdole2.tlb");

  interface IWebReportMan;
  dispinterface IWebReportManEvents;
  coclass WebReportMan;


  [
    uuid(C02B4F55-066F-4968-A0AC-43ED4DA53478), 
    version(1.0)
  ]
  enum TxActiveFormBorderStyle
  {
    [helpstring("afbNone")]
    afbNone = 0, 
    [helpstring("afbSingle")]
    afbSingle = 1, 
    [helpstring("afbSunken")]
    afbSunken = 2, 
    [helpstring("afbRaised")]
    afbRaised = 3
  };

  [
    uuid(6B7F78A8-41B9-4B26-8EC9-D6EE4E7111BB), 
    version(1.0)
  ]
  enum TxPrintScale
  {
    [helpstring("poNone")]
    poNone = 0, 
    [helpstring("poProportional")]
    poProportional = 1, 
    [helpstring("poPrintToFit")]
    poPrintToFit = 2
  };

  [
    uuid(CF27006F-A22F-4A65-B4B3-CDBAAC9C6B09), 
    version(1.0)
  ]
  enum TxMouseButton
  {
    [helpstring("mbLeft")]
    mbLeft = 0, 
    [helpstring("mbRight")]
    mbRight = 1, 
    [helpstring("mbMiddle")]
    mbMiddle = 2
  };

  [
    uuid(9D1F0393-3A30-471E-9789-1685E3947D30), 
    version(1.0), 
    helpstring("Dispatch interface for WebReportMan Control"), 
    dual, 
    oleautomation
  ]
  interface IWebReportMan: IDispatch
  {
    [propget, id(0x000000C9), hidden]
    HRESULT _stdcall Visible([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x000000C9), hidden]
    HRESULT _stdcall Visible([in] VARIANT_BOOL Value);
    [propget, id(0x000000CA)]
    HRESULT _stdcall AutoScroll([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x000000CA)]
    HRESULT _stdcall AutoScroll([in] VARIANT_BOOL Value);
    [propget, id(0x000000CB)]
    HRESULT _stdcall AutoSize([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x000000CB)]
    HRESULT _stdcall AutoSize([in] VARIANT_BOOL Value);
    [propget, id(0x000000CC)]
    HRESULT _stdcall AxBorderStyle([out, retval] enum TxActiveFormBorderStyle* Value);
    [propput, id(0x000000CC)]
    HRESULT _stdcall AxBorderStyle([in] enum TxActiveFormBorderStyle Value);
    [propget, id(0xFFFFFDFA)]
    HRESULT _stdcall Caption([out, retval] BSTR* Value);
    [propput, id(0xFFFFFDFA)]
    HRESULT _stdcall Caption([in] BSTR Value);
    [propget, id(0xFFFFFE0B)]
    HRESULT _stdcall Color([out, retval] OLE_COLOR* Value);
    [propput, id(0xFFFFFE0B)]
    HRESULT _stdcall Color([in] OLE_COLOR Value);
    [propget, id(0xFFFFFE00)]
    HRESULT _stdcall Font([out, retval] IFontDisp** Value);
    [propput, id(0xFFFFFE00)]
    HRESULT _stdcall Font([in] IFontDisp* Value);
    [propputref, id(0xFFFFFE00)]
    HRESULT _stdcall Font([in] IFontDisp** Value);
    [propget, id(0x000000CD)]
    HRESULT _stdcall KeyPreview([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x000000CD)]
    HRESULT _stdcall KeyPreview([in] VARIANT_BOOL Value);
    [propget, id(0x000000CE)]
    HRESULT _stdcall PixelsPerInch([out, retval] long* Value);
    [propput, id(0x000000CE)]
    HRESULT _stdcall PixelsPerInch([in] long Value);
    [propget, id(0x000000CF)]
    HRESULT _stdcall PrintScale([out, retval] enum TxPrintScale* Value);
    [propput, id(0x000000CF)]
    HRESULT _stdcall PrintScale([in] enum TxPrintScale Value);
    [propget, id(0x000000D0)]
    HRESULT _stdcall Scaled([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x000000D0)]
    HRESULT _stdcall Scaled([in] VARIANT_BOOL Value);
    [propget, id(0x000000D1), hidden]
    HRESULT _stdcall Active([out, retval] VARIANT_BOOL* Value);
    [propget, id(0x000000D2), hidden]
    HRESULT _stdcall DropTarget([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x000000D2), hidden]
    HRESULT _stdcall DropTarget([in] VARIANT_BOOL Value);
    [propget, id(0x000000D3), hidden]
    HRESULT _stdcall HelpFile([out, retval] BSTR* Value);
    [propput, id(0x000000D3), hidden]
    HRESULT _stdcall HelpFile([in] BSTR Value);
    [propget, id(0x000000D6), hidden]
    HRESULT _stdcall DoubleBuffered([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x000000D6), hidden]
    HRESULT _stdcall DoubleBuffered([in] VARIANT_BOOL Value);
    [propget, id(0x000000D7), hidden]
    HRESULT _stdcall AlignDisabled([out, retval] VARIANT_BOOL* Value);
    [propget, id(0x000000D8), hidden]
    HRESULT _stdcall VisibleDockClientCount([out, retval] long* Value);
    [propget, id(0xFFFFFDFE), hidden]
    HRESULT _stdcall Enabled([out, retval] VARIANT_BOOL* Value);
    [propput, id(0xFFFFFDFE), hidden]
    HRESULT _stdcall Enabled([in] VARIANT_BOOL Value);
    [propget, id(0x000000D9)]
    HRESULT _stdcall Preview([out, retval] long* Value);
    [propput, id(0x000000D9)]
    HRESULT _stdcall Preview([in] long Value);
    [propget, id(0x000000DA)]
    HRESULT _stdcall PrinterConfig([out, retval] long* Value);
    [propput, id(0x000000DA)]
    HRESULT _stdcall PrinterConfig([in] long Value);
    [propget, id(0x000000DB)]
    HRESULT _stdcall MetaUrl([out, retval] BSTR* Value);
    [propput, id(0x000000DB)]
    HRESULT _stdcall MetaUrl([in] BSTR Value);
    [propget, id(0x000000D4)]
    HRESULT _stdcall ShowProgress([out, retval] long* Value);
    [propput, id(0x000000D4)]
    HRESULT _stdcall ShowProgress([in] long Value);
    [propget, id(0x000000D5)]
    HRESULT _stdcall Embedded([out, retval] long* Value);
    [propput, id(0x000000D5)]
    HRESULT _stdcall Embedded([in] long Value);
    [propget, id(0x000000DC)]
    HRESULT _stdcall Install([out, retval] long* Value);
    [propput, id(0x000000DC)]
    HRESULT _stdcall Install([in] long Value);
    [propget, id(0x000000DD)]
    HRESULT _stdcall Port([out, retval] long* Value);
    [propput, id(0x000000DD)]
    HRESULT _stdcall Port([in] long Value);
    [propget, id(0x000000DE)]
    HRESULT _stdcall ShowPrintDialog([out, retval] long* Value);
    [propput, id(0x000000DE)]
    HRESULT _stdcall ShowPrintDialog([in] long Value);
    [propget, id(0x000000DF)]
    HRESULT _stdcall Copies([out, retval] long* Value);
    [propput, id(0x000000DF)]
    HRESULT _stdcall Copies([in] long Value);
    [propget, id(0x000000E0)]
    HRESULT _stdcall AsyncRead([out, retval] long* Value);
    [propput, id(0x000000E0)]
    HRESULT _stdcall AsyncRead([in] long Value);
    [propget, id(0x000000E1)]
    HRESULT _stdcall SSL([out, retval] long* Value);
    [propput, id(0x000000E1)]
    HRESULT _stdcall SSL([in] long Value);
  };

  [
    uuid(F6EFBA04-D512-4CFB-9D2B-2362E3C173D9), 
    version(1.0), 
    helpstring("Events interface for WebReportMan Control")
  ]
  dispinterface IWebReportManEvents
  {
    properties:
    methods:
    [id(0x000000C9)]
    void OnActivate(void);
    [id(0x000000CA)]
    void OnClick(void);
    [id(0x000000CB)]
    void OnCreate(void);
    [id(0x000000CC)]
    void OnDblClick(void);
    [id(0x000000CD)]
    void OnDestroy(void);
    [id(0x000000CE)]
    void OnDeactivate(void);
    [id(0x000000CF)]
    void OnKeyPress([in, out] short* Key);
    [id(0x000000D0)]
    void OnPaint(void);
  };

  [
    uuid(DF0F146D-1D4B-4216-93A8-B63BE78A3D7E), 
    version(1.0), 
    helpstring("WebReportMan Control"), 
    control
  ]
  coclass WebReportMan
  {
    [default] interface IWebReportMan;
    [default, source] dispinterface IWebReportManEvents;
  };

};